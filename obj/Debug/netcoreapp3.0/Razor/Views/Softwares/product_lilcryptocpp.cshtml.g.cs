#pragma checksum "/Users/patrik.nusszer/nusstudios/Views/Softwares/product_lilcryptocpp.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b924eab72390ce98a66cd0faaade9ecb7aa8cd39"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Softwares_product_lilcryptocpp), @"mvc.1.0.view", @"/Views/Softwares/product_lilcryptocpp.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/Users/patrik.nusszer/nusstudios/Views/_ViewImports.cshtml"
using Nusstudios;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b924eab72390ce98a66cd0faaade9ecb7aa8cd39", @"/Views/Softwares/product_lilcryptocpp.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d2753723ec3b7f1744cac33670045c6f2e6d4ce3", @"/Views/_ViewImports.cshtml")]
    public class Views_Softwares_product_lilcryptocpp : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 4 "/Users/patrik.nusszer/nusstudios/Views/Softwares/product_lilcryptocpp.cshtml"
  
    ViewData["Title"] = "lilcrypto";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            DefineSection("keywords", async() => {
                WriteLiteral("\r\n    <meta name=\"keywords\" content=\"C++, crypto, xor, xnor, sized key generation\" />\r\n");
            }
            );
            WriteLiteral("\r\n");
            DefineSection("topheading", async() => {
                WriteLiteral("\r\n    lilcrypto\r\n");
            }
            );
            WriteLiteral("\r\n");
            DefineSection("subheading", async() => {
                WriteLiteral("\r\n    A little bitwise cryptographic tool\r\n");
            }
            );
            WriteLiteral("\r\n");
            DefineSection("description", async() => {
                WriteLiteral(@"
    lilcrypto does XOR and XNOR coding for you with given input file, key, and chunk size. It also has an option for key generation of given byte size so that you can use it for one-time-pad encryption, otherwise the key is applied recursively with good old remainder division.
    It can encrypt very large files too efficiently. Works both with automated command line arguments and in human-friendly argumentless mode.
");
            }
            );
            WriteLiteral("\r\n");
            DefineSection("source", async() => {
                WriteLiteral("\r\n    href=\"https://mega.nz/#!ic4T3YZJ!p2BTSJzPaWsfQ0BftXVH-A7E4Lg2ApqNEgeDbhJUIRQ\" target=\"_blank\"\r\n");
            }
            );
            WriteLiteral("\r\n");
            DefineSection("release", async() => {
                WriteLiteral("\r\n    href=\"https://github.com/patriknusszer/lilcryptoc/raw/master/Build/Products/Debug/lilcryptoc\" target=\"_blank\"\r\n");
            }
            );
            WriteLiteral("\r\n");
            DefineSection("projectspecs", async() => {
                WriteLiteral("\r\n    Compiled binary for macOS, console application. C++17 features. Version 1.0.\r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
